# -*- coding: utf-8 -*-
"""tarefa18/09.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-pHvdzHRbgdfghshvuSDoW2L_tVXyvEu
"""

import os
import hmac
import hashlib

def generate_random_bytes(length):
    return os.urandom(length).hex()

def hmac_auth(key, message):
    return hmac.new(key.encode('utf-8'), message.encode('utf-8'), hashlib.sha256).hexdigest()

# Gera uma chave secreta aleatória
key = generate_random_bytes(16)  # 16 bytes aleatórios

print(f"Chave secreta gerada: {key}")

message = "mensagem_confidencial"
hmac_value = hmac_auth(key, message)

print(f"HMAC: {hmac_value}")

# Função para verificar HMAC
def verify_hmac(key, message, hmac_to_verify):
    generated_hmac = hmac_auth(key, message)
    return hmac.compare_digest(generated_hmac, hmac_to_verify)

# Exemplo de verificação
hmac_to_verify = hmac_auth(key, message)
is_valid = verify_hmac(key, message, hmac_to_verify)

print(f"O HMAC é válido? : {is_valid}")