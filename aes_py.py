# -*- coding: utf-8 -*-
"""aes.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hRMYiTsc8ksJ2jdFwoq4SDeHx5FBiqRO
"""

pip install pycryptodome

from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from Crypto.Random import get_random_bytes

def aes_encriptar (mensagem, chave):
  iv = get_random_bytes(AES. block_size)
  cipher = AES.new(chave, AES.MODE_CBC, iv)
  mensagem_padded = pad(mensagem.encode('utf-8'), AES.block_size)

  mensagem_encriptada = cipher. encrypt(mensagem_padded)
  return iv + mensagem_encriptada

def aes_decriptar (mensagen_encriptada, chave):
  iv = mensagem_encriptada[:AES.block_size]
  cipher = AES. new(chave, AES. MODE_CBC, iv)
  mensagem_padded = cipher.decrypt(mensagem_encriptada[AES.block_size:])

  mensagem = unpad(mensagem_padded, AES.block_size)
  return mensagem.decode('utf-8')

mensagem = "ola munda seguro"
chave = get_random_bytes (16)

mensagem_encriptada = aes_encriptar(mensagem, chave)
print("Mensagem encriptada: ", mensagem_encriptada)

mensagem_decifrada = aes_decriptar(mensagem_encriptada, chave)
print("Mensagen decifrada: ", mensagem_decifrada)